@import "../base/components";

/* ==========================
   Root list (small by default)
   ========================== */
.timeline-container ul {
  --gap-divider-header: var(--margin-lg, 12px);
  --gap-header-body: var(--margin-lg, 12px);
  --gap-body-divider: var(--margin-lg, 12px);
  --gap-body-sources: var(--margin-md, 12px);

  --dot-size: 22px;
  --dot-stroke: 3px;
  --dot-glyph-scale: 0.55;
  --dot-offset-y: -0.125rem;

  --rail-col: calc(var(--dot-size) + 2 * var(--dot-stroke));
  --rail-width: var(--border-width-sm, 2px);
  --content-gap-x: var(--margin-md, 12px);

  list-style: none;
  margin: 0;
  padding-left: 0; /* keeps rail math stable */
  position: relative;

  @include component-font(sm);
  box-sizing: border-box;

  /* Ensure no legacy global rail */
  &::before {
    content: "";
    position: absolute;
    left: calc(var(--rail-col) / 2 - var(--rail-width) / 2);
    top: 5px;
    bottom: 5px;
    width: var(--rail-width);
    background-color: var(--color-border-primary);
    pointer-events: none;
    z-index: 0;
  }
}

/* ==========================
   Expand/Collapse container
   ========================== */
.timeline-body {
  display: block;
  overflow: hidden;
  height: 0;
  opacity: 0;
  transition: height 250ms ease, opacity 200ms ease;
}

.timeline-inner {
  padding-top: var(--margin-sm, 8px);
}

/* ==========================
   Each LI = [item] + [divider]
   ========================== */
.timeline-li {
  position: relative; /* anchor the per-row rail segment */
  z-index: 0;
  display: grid;
  grid-template-rows: auto auto;
  row-gap: var(--gap-body-divider); /* BODY - DIVIDER */
  padding-top: var(--gap-divider-header); /* DIVIDER - HEADER (prevâ†’this) */
}

.timeline-item {
  position: relative;
  display: grid;
  grid-template-columns: var(--rail-col) 1fr;
  column-gap: var(--content-gap-x);
  align-items: start;
  margin: 0;

  &.clickable {
    cursor: pointer;
  }
}

/* Dot centered in the rail column */
.icon-wrapper {
  position: relative;
  z-index: 1; /* above the per-row segment */
  justify-self: center;
  align-self: start;
  width: var(--dot-size);
  height: var(--dot-size);
  border-radius: 50%;
  background-color: var(--color-surface, #f0f4f9);
  color: var(--color-text-secondary);
  display: grid;
  place-items: center;
  transform: translateY(var(--dot-offset-y));
}
.icon-wrapper i {
  line-height: 1;
  display: block;
  font-size: calc(var(--dot-size) * var(--dot-glyph-scale));
}

/* Content column with HEADER - BODY spacing via row-gap */
.item-content {
  min-width: 0;
  display: grid;
  row-gap: var(--gap-header-body);
}

/* ==========================
   Header area
   ========================== */
.item-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: var(--margin-sm, 8px);
}

.item-title {
  @include component-font(sm, var(--fw-semibold, 600));
  line-height: 1.2;
  color: var(--color-text);
  flex: 1 1 auto;
  min-width: 0;
}

.item-meta {
  @include component-font(sm);
  display: inline-flex;
  gap: var(--margin-sm, 8px);
  color: var(--color-text-secondary);
  white-space: nowrap;
}

/* ==========================
   Body text
   ========================== */
.item-body .body-text {
  margin: 0;
  color: var(--color-text);
}
.item-body > :first-child {
  margin-top: 0;
}
.item-body > :last-child {
  margin-bottom: 0;
}

/* ==========================
   Sources
   ========================== */
.sources-wrapper {
  display: flex;
  flex-wrap: wrap;
  gap: var(--margin-lg, 12px);
}

.source-icon {
  font-size: 1rem;
  line-height: 1;
}

/* ==========================
   Optional divider aligned with content column
   ========================== */
.timeline-divider {
  height: 1px;
  background-color: var(--color-border-primary);
  margin-left: calc(var(--rail-col) + var(--content-gap-x));
}

/* ==========================
   Body grid spacing
   ========================== */
.item-body {
  display: grid;
  grid-auto-rows: min-content;
  row-gap: var(--gap-body-sources);
}
